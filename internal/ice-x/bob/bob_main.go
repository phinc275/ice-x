// Code generated by BobGen psql v0.22.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package bob

import (
	"context"

	"github.com/stephenafamo/bob/dialect/psql"
	"github.com/stephenafamo/bob/dialect/psql/dialect"
)

var TableNames = struct {
	XAccounts string
}{
	XAccounts: "x_accounts",
}

var ColumnNames = struct {
	XAccounts xAccountColumnNames
}{
	XAccounts: xAccountColumnNames{
		Username:                  "username",
		Password:                  "password",
		Email:                     "email",
		EmailPassword:             "email_password",
		CreatedAt:                 "created_at",
		UpdatedAt:                 "updated_at",
		Cookies:                   "cookies",
		AutoEmailConfirmationCode: "auto_email_confirmation_code",
	},
}

var (
	SelectWhere = Where[*dialect.SelectQuery]()
	InsertWhere = Where[*dialect.InsertQuery]()
	UpdateWhere = Where[*dialect.UpdateQuery]()
	DeleteWhere = Where[*dialect.DeleteQuery]()
)

func Where[Q psql.Filterable]() struct {
	XAccounts xAccountWhere[Q]
} {
	return struct {
		XAccounts xAccountWhere[Q]
	}{
		XAccounts: XAccountWhere[Q](),
	}
}

var (
	SelectJoins = getJoins[*dialect.SelectQuery]
	UpdateJoins = getJoins[*dialect.UpdateQuery]
	DeleteJoins = getJoins[*dialect.DeleteQuery]
)

type joinSet[Q any] struct {
	InnerJoin Q
	LeftJoin  Q
	RightJoin Q
}

type joins[Q dialect.Joinable] struct {
}

func getJoins[Q dialect.Joinable](ctx context.Context) joins[Q] {
	return joins[Q]{}
}
